services:
  jellyfin:
    image: jellyfin/jellyfin:2024081905
    container_name: jellyfin
    user: 1000:1000
    volumes:
      - config:/config
      - cache:/cache
      - media:/media
    runtime: nvidia
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    network_mode: 'host'
    # networks:
    #   - proxy
    env_file:
      - .env
    group_add:
      - '107' #render
      - '44' #video
    devices:
    #   # VAAPI Devices
       - /dev/dri/renderD129:/dev/dri/renderD129
       - /dev/dri/card0:/dev/dri/card0
      
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.jf.entrypoints=web"
      - "traefik.http.routers.jf.rule=Host(`jf.${FQDN}`)"
      - "traefik.http.middlewares.jf-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.jf.middlewares=jf-https-redirect"
      - "traefik.http.routers.jf-secure.entrypoints=websecure"
      - "traefik.http.routers.jf-secure.rule=Host(`jf.${FQDN}`)"
      - "traefik.http.routers.jf-secure.tls=true"
      - "traefik.http.routers.jf-secure.service=jellyfin-svc"
      - "traefik.http.services.jellyfin-svc.loadbalancer.server.port=8096"
      # - "traefik.docker.network=proxy"
            ## Middleware
      - 'traefik.http.routers.jf.middlewares=jellyfin-mw'
      #### The customResponseHeaders option lists the Header names and values to apply to the response.
      - 'traefik.http.middlewares.jellyfin-mw.headers.customResponseHeaders.X-Robots-Tag=noindex,nofollow,nosnippet,noarchive,notranslate,noimageindex'
      #### The sslRedirect is set to true, then only allow https requests.
      # - 'traefik.http.middlewares.jellyfin-mw.headers.SSLRedirect=true'
      #### The sslHost option is the host name that is used to redirect http requests to https.
      #### This is the exact URL that will be redirected to, so you can remove the :9999 port if using default SSL port
      # - 'traefik.http.middlewares.jellyfin-mw.headers.SSLHost=jf.watermelononatoothpick.com'
      #### Set sslForceHost to true and set SSLHost to forced requests to use SSLHost even the ones that are already using SSL.
      #### Note that this uses SSLHost verbatim, so add the port to SSLHost if you are using an alternate port.
      # - 'traefik.http.middlewares.jellyfin-mw.headers.SSLForceHost=true'
      #### The stsSeconds is the max-age of the Strict-Transport-Security header. If set to 0, would NOT include the header.
      - 'traefik.http.middlewares.jellyfin-mw.headers.STSSeconds=315360000'
      #### The stsIncludeSubdomains is set to true, the includeSubDomains directive will be
      #### appended to the Strict-Transport-Security header.
      - 'traefik.http.middlewares.jellyfin-mw.headers.STSIncludeSubdomains=true'
      #### Set stsPreload to true to have the preload flag appended to the Strict-Transport-Security header.
      - 'traefik.http.middlewares.jellyfin-mw.headers.STSPreload=true'
      #### Set forceSTSHeader to true, to add the STS header even when the connection is HTTP.
      - 'traefik.http.middlewares.jellyfin-mw.headers.forceSTSHeader=true'
      #### Set frameDeny to true to add the X-Frame-Options header with the value of DENY.
      - 'traefik.http.middlewares.jellyfin-mw.headers.frameDeny=true'
      #### Set contentTypeNosniff to true to add the X-Content-Type-Options header with the value nosniff.
      - 'traefik.http.middlewares.jellyfin-mw.headers.contentTypeNosniff=true'
      #### Set browserXssFilter to true to add the X-XSS-Protection header with the value 1; mode=block.
      - 'traefik.http.middlewares.jellyfin-mw.headers.customresponseheaders.X-XSS-PROTECTION=1'
      #### The customFrameOptionsValue allows the X-Frame-Options header value to be set with a custom value. This
      #### overrides the FrameDeny option.
      #- "traefik.http.middlewares.jellyfin-mw.headers.customFrameOptionsValue='allow-from https://DOMAIN_NAME'"
      - "kop.bind.ip=192.168.25.8"



volumes:
  media:
    driver_opts:
      type: "nfs"
      o: "addr=192.168.25.4,nolock,soft,rw"
      device: ":/mnt/NStorage/Media/"
  config:
    driver_opts:
      type: "nfs"
      o: "addr=192.168.25.4,nolock,soft,rw"
      device: ":/mnt/NStorage/docker-persist/jellyfin"
  cache:
# networks:
  # proxy:
    # external: true