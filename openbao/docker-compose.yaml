volumes:
  pg_data:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '/mnt/NStorage/komodo/volumes/openbao/pg_data'
  openbao:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '/mnt/NStorage/komodo/volumes/openbao/app_data'
networks:
  openbao:
  proxy:
    external: true
  db_backend:
    external: true

services:
  db:
    image: pgautoupgrade/pgautoupgrade:17-alpine
    container_name: openbao_db
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB:-openbao}
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -h localhost -U ${POSTGRES_USER} -d ${POSTGRES_DB:-openbao}']
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      db_backend:
    volumes:
      - pg_data:/var/lib/postgresql/data

  openbao:
    image: openbao/openbao:2.1.0
    command: ['server', '-config=/openbao/config/bao.conf']
    container_name: openbao
    cap_add:
      - IPC_LOCK
    # ports:
    #   - 8200:8200
    depends_on:
      db:
        condition: service_healthy
    environment:
      - VAULT_ADDR=http://127.0.0.1:8200
      - VAULT_DISABLE_MLOCK=true
      - VAULT_PG_CONNECTION_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB:-openbao}?sslmode=disable
    healthcheck:
      interval: 2s
      retries: 10
      start_period: 5s
      test: 'wget --spider  http://127.0.0.1:8200/v1/sys/seal-status || exit 1'
      timeout: 10s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.openbao.entrypoints=web"
      - "traefik.http.routers.openbao.rule=Host(`${OPENBAO_HOST}`)"
      - "traefik.http.middlewares.openbao-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.openbao.middlewares=openbao-https-redirect"
      - "traefik.http.routers.openbao-secure.entrypoints=websecure"
      - "traefik.http.routers.openbao-secure.rule=Host(`${OPENBAO_HOST}`)"
      - "traefik.http.routers.openbao-secure.tls=true"
      - "traefik.http.routers.openbao-secure.service=openbao"
      - "traefik.http.services.openbao.loadbalancer.server.port=8200"
      - "traefik.docker.network=proxy"
    volumes:
      - ./bao.conf:/openbao/config/bao.conf
      - openbao:/openbao
    networks:
      db_backend:
      proxy: